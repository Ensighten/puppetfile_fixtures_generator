#!/usr/bin/env ruby

require 'puppetfile_fixtures_generator'
require 'trollop'
require 'highline/import'

opts = Trollop.options do
  version PuppetfileFixturesGenerator::VERSION
  banner <<-EOS
Writes a YAML file conforming to puppetlabs_spec_helper's fixtures file format
based off a provided Puppetfile.

Usage:
      puppetfile_fixtures_generator [options]
where [options] are:
EOS

  opt :puppetfile,
      'The path, local or absolute, to the Puppetfile. This Puppetfile will be loaded and parsed to create the fixtures YAML file.',
      type: :string,
      default: nil
  opt :fixtures_yml,
      'The path, local or absolute, to the fixtures file to be written. The path, not the file, must exist.',
      type: :string,
      default: './.fixtures.yml'
  opt :symlink_name,
      'The name of the module to include as the source_dir symlink in the fixtures file.',
      type: :string,
      default: nil
  opt :diff,
      'Diff puppetfile and fixtures instead of writing',
      type: :bool,
      default: false
  opt :quiet,
      'Do not prompt.',
      type: :bool,
      default: false
end

unless opts[:quiet] || opts[:diff]
  confirm = ask("This will overwrite #{opts[:fixtures_yml]}. Proceed? [Y/n] ") do |yn|
    yn.case = :downcase
    yn.default = 'y'
    yn.limit = 1
    yn.validate = /[yn]/i
  end
  exit unless confirm == 'y'
end

if !opts[:diff]
  say("Creating #{opts[:fixtures_yml]}...")
  PuppetfileFixturesGenerator.create_fixtures(opts[:puppetfile],
                                              opts[:fixtures_yml],
                                              opts[:symlink_name])
  say('Complete.')
  exit
else
  say('Diffing Puppetfile and fixtures')
  diff = PuppetfileFixturesGenerator.diff(opts[:puppetfile],
                                          opts[:fixtures_yml])
  if diff[0]
    say('Modules match in both files.')
    exit
  else
    abort "Modules do not match in both files\n#{diff[1]}"
  end
end
